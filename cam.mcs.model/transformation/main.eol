import "simulation.eol";
var system : MCS_system;
"Start...".println();
main(2);
"Over.".println();

operation main(N : Integer){
	for (i in 1.to(N)){
		"______________________________________________".println();
		("Simulation "+i+":").println();
		system = new MCS_system;
		system.initParameter();
		system.initTasks();
		system.initCore();
		for (j in 1.to(4)){
			j.println();
			if (j=1){
				system.parameter.init_status = Status#LOW;
				system.restart();
				run();
				recordResult("LOW");
			}
			else if (j=2){
				system.parameter.init_status = Status#MCP;
				system.restart();
				run();
				recordResult("MCP");
			}
			else if (j=3){
				system.parameter.init_status = Status#HIGH;
				system.restart();
				run();
				recordResult("HIGH");
			}
			else if (j=4){
				system.parameter.init_status = Status#LOW;
				system.parameter.period_number = 5;
				system.parameter.disturbance_open = true;
				system.restart();
				run();
				recordResult("System");
			}
		}
	}
	"______________________________________________".println();
}

operation MCS_system initParameter(){
	var parameter = new Parameter;
	parameter.period_number = 3;
	parameter.task_number = 10;
	parameter.CPU_rate = 0.5;
	parameter.high_task_number = 5;
	parameter.critical_section_number = 1;
	parameter.init_status = Status#LOW;
	parameter.max_deadline_limit = 2000;
	parameter.min_deadline_limit = 200;
	parameter.max_cstime_precent = 0.25;
	parameter.high_vs_low = 1.5;
	parameter.disturbance_open = false;
	parameter.print_process = false;
	parameter.print_result = true;
	self.parameter = parameter;
}